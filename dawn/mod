# build absl, tint, dawn
# easier to manage than using their GN build, 
# especially since skia builds its own dawn and does not let you configure it
# nor does it compile the support functions for glfw
# it should not clash for these to be built together, with merged includes
# i didnt get anywhere in skia-discuss (along with many others) so am providing this basic mod
dep(
    glfw:glfw3
    glm:glm_static
    mx:mx
    mx:math
    mx:async
    ion:media
)

defines(TINT_BUILD_WGSL_READER
        TINT_BUILD_WGSL_WRITER)

if (win)
    dep(d3d12 dxgi d3dcompiler)
    defines(
        TINT_BUILD_HLSL_WRITER
        DAWN_ENABLE_BACKEND_D3D12)
    
elseif (mac)
    dep(CoreFoundation IOKit IOSurface QuartzCore Metal AppKit CoreGraphics Cocoa)
    defines(
        TINT_BUILD_METAL_WRITER
        DAWN_ENABLE_BACKEND_METAL)
elseif (linux)
    dep(X11 Vulkan)
    defines(
        TINT_BUILD_SPV_WRITER
        DAWN_USE_X11
        DAWN_ENABLE_BACKEND_VULKAN)
endif()


# include SPIRV-Tools and its build folder, which has some generated data
includes(${EXTERN_DIR}/SPIRV-Tools)
includes(${EXTERN_DIR}/SPIRV-Tools/ion-${cfg_lower})

if (linux)
    includes(${EXTERN_DIR}/Vulkan-Utility-Libraries)
endif()

# abseil-cpp combined
# -----------------------------
set(absl_src ${EXTERN_DIR}/abseil-cpp)
includes(${absl_src})
src(${absl_src}/absl/**.cc)

# tint
# -----------------------------
set(tint_src ${EXTERN_DIR}/dawn/src/tint)

# all use core, utils/** and wgsl/**
src(
    ${tint_src}/lang/core/*.cc
    ${tint_src}/lang/core/constant/*.cc
    ${tint_src}/lang/core/intrinsic/*.cc
    ${tint_src}/lang/core/ir/*.cc
    # ${tint_src}/lang/core/ir/binary/*.cc
    ${tint_src}/lang/core/ir/transform/*.cc
    ${tint_src}/lang/core/type/*.cc
    ${tint_src}/lang/wgsl/**.cc
    ${tint_src}/utils/**.cc
    ${tint_src}/api/**.cc
)

# reader based on dawn's target platform
# -----------------------------
if(mac)
    src(${tint_src}/lang/msl/**.cc)
elseif(win)
    src(${tint_src}/lang/hlsl/**.cc)
elseif(lin)
    src(${tint_src}/lang/spirv/**.cc)
endif()

# dawn
# -----------------------------
set(dawn_gen ${EXTERN_DIR}/dawn/ion-${cfg_lower}/gen)
set(dawn_src ${EXTERN_DIR}/dawn/src/dawn)

includes(
    ${EXTERN_DIR}/dawn
    ${dawn_gen}/include
    ${dawn_gen}/src
    ${dawn_gen}/src/dawn/native
    ${dawn_gen}/src/dawn/common
    ${dawn_gen}/src/dawn/wire
    ${dawn_gen}/src/dawn/wire/server
    ${dawn_gen}/src/dawn/wire/client
    ${EXTERN_DIR}/dawn/src
    ${dawn_src}/partition_alloc
    ${dawn_src}/native
    ${dawn_src}/native/utils
    ${dawn_src}/common
    ${dawn_src}/utils
    ${dawn_src}/wire
    ${dawn_src}/wire/server
    ${dawn_src}/wire/client
)

# add repo-based source
# -----------------------------
src(
    ${dawn_src}/common/**.cpp
    ${dawn_src}/native/*.cpp
    ${dawn_src}/native/null/*.cpp
    ${dawn_src}/native/utils/*.cpp
    ${dawn_src}/native/stream/*.cpp
    ${dawn_src}/utils/*.cpp
    ${dawn_src}/wire/*.cpp
    ${dawn_src}/glfw/*.cpp
    ${dawn_src}/platform/**.cpp)

# add generated source (built by .py)
# -----------------------------
src(
    ${dawn_gen}/src/dawn/common/*.cpp
    ${dawn_gen}/src/dawn/dawn_proc.c
    ${dawn_gen}/src/dawn/*.cpp
    ${dawn_gen}/src/dawn/native/*.cpp
    ${dawn_gen}/src/dawn/wire/**.cpp)

if (win)
    src(${dawn_src}/native/d3d/**.cpp
        ${dawn_src}/native/d3d12/**.cpp)
endif()

if (linux)
    src(${dawn_src}/native/vulkan/**.cpp)
endif()

if (mac)
    src(${dawn_src}/native/metal/**.cpp)
endif()

# benchmark / test code removal
# -----------------------------
src(-_test.cc)
src(-_testing.cc)
src(-_bench.cc)
src(-_benchmark.cc)
src(-_test_common.cc)
src(-_mock_log.cc)
src(-benchmarks.cc)
src(-test_helpers.cc)
src(-test_matchers.cc)

# contains typo, and used by Fushia
# -----------------------------
src(-SemaphoreServiceImplementationZirconHandle.cpp)
src(-MemoryServiceImplementationZirconHandle.cpp)

if(NOT android)
    src(-AHBFunctions.cpp -MemoryServiceImplementationAHardwareBuffer.cpp)
endif()

if(NOT mac)
    src(
        -IOSurfaceUtils.cpp
        -OSXTimer.cpp
    )
endif()

if(NOT win)
    src(
        -WindowsUtils.cpp
        -WindowsTimer.cpp
        -WindowsDebugLogger.cpp
        -printer_windows.cc
        -command_windows.cc
        -tmpfile_windows.cc
    )
endif()

