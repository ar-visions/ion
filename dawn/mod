# build absl, spirv-tools, tint, dawn, and skia
# -----------------------------
cpp(17)

dep(mx:mx)

if (win)
    dep(d3d12 dxgi dxguid d3dcompiler)
endif()

dep(glfw:glfw3)

defines(TINT_BUILD_WGSL_READER
        TINT_BUILD_WGSL_WRITER)

if (win)
    cxxflags(+/bigobj +-Wno-macro-redefined +-Wno-unused-private-field)
    defines(
        NOMINMAX
        _CRT_SECURE_NO_WARNINGS
        TINT_BUILD_IS_WIN
        TINT_BUILD_HLSL_WRITER
        DAWN_ENABLE_BACKEND_D3D12)
elseif (mac)
    dep(@CoreFoundation @IOKit @IOSurface @QuartzCore @Metal @AppKit @CoreGraphics @Cocoa)
    defines(
        TINT_BUILD_IS_MAC
        TINT_BUILD_MSL_WRITER
        DAWN_ENABLE_BACKEND_METAL)
elseif (linux)
    dep(@X11 @Vulkan)
    defines(
        TINT_BUILD_IS_LINUX
        TINT_BUILD_SPV_WRITER
        DAWN_USE_X11
        DAWN_ENABLE_BACKEND_VULKAN)
endif()

if(linux)
    # spriv tools
    # -----------------------------
    includes(${EXTERN_DIR}/SPIRV-Tools)
    includes(${EXTERN_DIR}/SPIRV-Tools/ion-${cfg_lower})
    includes(${EXTERN_DIR}/Vulkan-Utility-Libraries)
endif()

# abseil-cpp combined
# -----------------------------
set(absl_src ${EXTERN_DIR}/abseil-cpp)
includes(${absl_src})
src(${absl_src}/absl/**.cc)

# tint
# -----------------------------
set(tint_src ${EXTERN_DIR}/dawn/src/tint)

# all use core, utils/** and wgsl/**
src(
    ${tint_src}/lang/core/*.cc
    ${tint_src}/lang/core/constant/*.cc
    ${tint_src}/lang/core/intrinsic/*.cc
    ${tint_src}/lang/core/ir/*.cc
    # ${tint_src}/lang/core/ir/binary/*.cc
    ${tint_src}/lang/core/ir/transform/*.cc
    ${tint_src}/lang/core/type/*.cc
    ${tint_src}/lang/wgsl/**.cc
    ${tint_src}/utils/**.cc
    ${tint_src}/api/**.cc
)

# reader based on dawn's target platform
# -----------------------------
if(mac)
    src(${tint_src}/lang/msl/**.cc)
elseif(win)
    src(${tint_src}/lang/hlsl/**.cc)
elseif(lin)
    src(${tint_src}/lang/spirv/**.cc)
endif()

# dawn
# -----------------------------
set(dawn_gen ${EXTERN_DIR}/dawn/ion-${cfg_lower}/gen)
set(dawn_src ${EXTERN_DIR}/dawn/src/dawn)

includes(
    ${EXTERN_DIR}/dawn
    ${dawn_gen}/include
    ${dawn_gen}/src
    ${dawn_gen}/src/dawn/wire
    ${dawn_gen}/src/dawn/wire/server
    ${dawn_gen}/src/dawn/wire/client
    ${EXTERN_DIR}/dawn/src
    ${dawn_src}/partition_alloc
    ${dawn_src}/native/utils
    ${dawn_src}/utils
    ${dawn_src}/wire
    ${dawn_src}/wire/server
    ${dawn_src}/wire/client
)

# add repo-based source
# -----------------------------
src(
    ${dawn_src}/common/**.cpp
    ${dawn_src}/native/*.cpp
    ${dawn_src}/native/null/*.cpp
    ${dawn_src}/native/utils/*.cpp
    ${dawn_src}/native/stream/*.cpp
    ${dawn_src}/samples/SampleUtils.cpp
    ${dawn_src}/wire/client/*.cpp
    ${dawn_src}/wire/server/*.cpp
    ${dawn_src}/utils/*.cpp
    ${dawn_src}/wire/*.cpp
    ${dawn_src}/glfw/*.cpp
    ${dawn_src}/platform/**.cpp)

# add generated source (built by .py)
# -----------------------------
src(
    ${dawn_gen}/src/dawn/common/*.cpp
    ${dawn_gen}/src/dawn/dawn_proc.c
    ${dawn_gen}/src/dawn/*.cpp
    ${dawn_gen}/src/dawn/native/*.cpp
    ${dawn_gen}/src/dawn/wire/**.cpp)

if (win)
    src(${dawn_src}/native/d3d/**.cpp
        ${dawn_src}/native/d3d12/**.cpp)
endif()

if (linux)
    src(${dawn_src}/native/vulkan/**.cpp)
endif()

if (mac)
    src(${dawn_src}/native/Surface_metal.mm)
    src(${dawn_src}/native/metal/**.cpp)
    src(${dawn_src}/common/SystemUtils_mac.mm)
    src(${dawn_src}/native/metal/**.mm)
    src(${dawn_src}/glfw/utils_metal.mm)
endif()

# benchmark / test code removal
# -----------------------------
src(-_test.cc
    -_testing.cc
    -_bench.cc
    -_benchmark.cc
    -_test_common.cc
    -_mock_log.cc
    -benchmarks.cc
    -test_helpers.cc
    -test_matchers.cc
    -SemaphoreServiceImplementationZirconHandle.cpp
    -MemoryServiceImplementationZirconHandle.cpp
    -diagnostic_test.cc
)

# got mixed up with skia build:
src(
    -_mock.cpp
    -_win.cpp
    -_fuzz.cpp
    -_coretext.cpp
    -public_headers_warnings_check.cpp
)

if(NOT android)
    src(-AHBFunctions.cpp -MemoryServiceImplementationAHardwareBuffer.cpp)
endif()

if(NOT mac)
    src(
        -IOSurfaceUtils.cpp
        -OSXTimer.cpp
    )
endif()

if(NOT win)
    src(
        -WindowsUtils.cpp
        -WindowsTimer.cpp
        -WindowsDebugLogger.cpp
        -_windows.cc
    )
endif()

if (NOT linux)
src(
    -X11Functions.cpp
    -SpirvValidation.cpp
    -PosixTimer.cpp
)
endif()

if (NOT mac)
    src(-OSXTimer.cpp)
    if (NOT linux)
        src(
            -_posix.cc
        )
    endif()
endif()

includes(
    ${INSTALL_PREFIX}/include/harfbuzz
    ${INSTALL_PREFIX}/include/freetype2
)

set(dawn_dir ${EXTERN_DIR}/dawn)

includes(
    ${dawn_dir}/include
    ${dawn_dir}/src
    ${dawn_dir}/ion-${cfg_lower}/include
    ${dawn_dir}/ion-${cfg_lower}/gen/include
)
