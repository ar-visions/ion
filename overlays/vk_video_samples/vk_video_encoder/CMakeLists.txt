cmake_minimum_required(VERSION 3.5)

set(PROJNAME "vk_video_encoder")
Project(${PROJNAME})
Message(STATUS "-------------------------------")
Message(STATUS "Processing Project ${PROJNAME}:")


#####################################################################################
# look for nvpro_core 1) as a sub-folder 2) at some other locations
# this cannot be put anywhere else since we still didn't find setup.cmake yet
#
if(NOT BASE_DIRECTORY)

  find_path(BASE_DIRECTORY
    NAMES nvpro_core/cmake/setup.cmake
    PATHS ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/.. ${CMAKE_CURRENT_SOURCE_DIR}/../.. 
    REQUIRED
    DOC "Directory containing nvpro_core"
    )
endif()
if(EXISTS ${BASE_DIRECTORY}/nvpro_core/cmake/setup.cmake)
  include(${BASE_DIRECTORY}/nvpro_core/cmake/setup.cmake)
else()
  message(FATAL_ERROR "could not find base directory, please set BASE_DIRECTORY to folder containing nvpro_core")
endif()

_add_project_definitions(${PROJNAME})

#####################################################################################
# additions from packages needed for this sample
# add refs  in LIBRARIES_OPTIMIZED
# add refs  in LIBRARIES_DEBUG
# add files in PACKAGE_SOURCE_FILES

set( LIBNAME ${PROJNAME} )
_add_package_VulkanSDK()

#####################################################################################
# process the rest of some cmake code that needs to be done *after* the packages add
_add_nvpro_core_lib()

#####################################################################################
# Source files for this project
#
file(GLOB SOURCE_FILES *.cpp *.hpp *.inl *.h *.c)
file(GLOB GLSL_FILES *.glsl)

include_directories("${CMAKE_CURRENT_SOURCE_DIR}/../common" 
                    "${CMAKE_CURRENT_SOURCE_DIR}/../common/include")

#####################################################################################
# Executable
#
if(WIN32 AND NOT GLUT_FOUND)
  add_definitions(/wd4996) #remove printf warning
  add_definitions(/wd4244) #remove double to float conversion warning
  add_definitions(/wd4305) #remove double to float truncation warning
else()
  add_definitions(-fpermissive)
  add_definitions(-DVULKAN_HPP_NO_TO_STRING=1)
endif()

set(COMMON_VIDEO_SOURCE_FILES
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/include/VkVideoCore/VkVideoCoreProfile.h
        ${CMAKE_CURRENT_SOURCE_DIR}/../common/src/VkCodecUtils/nvVkFormats.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/VkCodecUtils/NvPictureBuffer.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/VkCodecUtils/NvPictureBuffer.h
        ${CMAKE_CURRENT_SOURCE_DIR}/VkCodecUtils/NvVideoSession.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/VkCodecUtils/NvVideoSession.h
   ) 

add_library(${LIBNAME} STATIC ${SOURCE_FILES} ${COMMON_VIDEO_SOURCE_FILES} ${COMMON_SOURCE_FILES} ${PACKAGE_SOURCE_FILES} ${GLSL_SOURCES})

#_set_subsystem_console(${LIBNAME})

#####################################################################################
# common source code needed for this sample
#
source_group(common FILES 
  ${COMMON_SOURCE_FILES}
  ${PACKAGE_SOURCE_FILES}
)
source_group("Source Files" FILES ${SOURCE_FILES})

if(UNIX)
  set(UNIXLINKLIBS dl pthread)
else()
  set(UNIXLINKLIBS)
endif()

#####################################################################################
# Linkage
#
target_link_libraries(${LIBNAME} ${PLATFORM_LIBRARIES} nvpro_core)

foreach(DEBUGLIB ${LIBRARIES_DEBUG})
  target_link_libraries(${LIBNAME} debug ${DEBUGLIB})
endforeach(DEBUGLIB)

foreach(RELEASELIB ${LIBRARIES_OPTIMIZED})
  target_link_libraries(${LIBNAME} optimized ${RELEASELIB})
endforeach(RELEASELIB)

install(TARGETS ${LIBNAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

#####################################################################################
# copies binaries that need to be put next to the exe files (ZLib, etc.)
#
# ???
#_finalize_target( ${LIBNAME} )


